---
title: "Stockport simulations"
format: pdf
editor: visual
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
---

```{r}
library(calmr)
library(tidyverse)

theme_set(theme_minimal(base_size = 14))
```

# Mackintosh 1975 simulations

## Continuous and partial reinforcement

### Design

| Group      |       Phase 1       | Phase 2  |
|------------|:-------------------:|----------|
| Continuous |      20x A-O1       | 20x A-O3 |
| Partial    | 10x A-O1 ; 10x A-O2 | 20x A-O3 |

```{r}

simple_design <- data.frame(
  Group = c("continuous", "partial"),
  Phase1 = c("20A(O1)", "10A(O1)/10A(O2)"),
  R1 = c(TRUE, TRUE),
  Phase2 = c("20A(O3)", "20A(O3)"),
  R2 = c(TRUE, TRUE)
)
# parsing the design and showing the original and what was detected
parsed <- parse_design(simple_design)

pars_MAC1975 <- get_parameters(simple_design, model = "MAC1975")

# set to original model with no WCA
pars_MAC1975$gammas[c("A","B")] <- 0
pars_MAC1975$gammas[c("O1","O2","O3")] <- 1

```

### Run simulation

```{r}
simple_design_results <- run_experiment(
  simple_design, # note we do not need to pass the parsed design
  model = "MAC1975",
  parameters = pars_MAC1975,
  iterations = 10
)

# supported_plots("MAC1975")
# plot(simple_design_results)
# plot(simple_design_results, type = "as") 

#slotNames(simple_design_results)
```

### Plot the results

```{r}
# calculate and plot Vs

vs_res <- 
  results(simple_design_results)[["vs"]] %>% 
    filter(s1 %in% c("A"),
           s2 %in% c("O1", "O2", "O3")) %>% 
  group_by(trial, s1, s2, group) %>% 
  summarise(value = mean(value))

vs_res %>%
  ggplot(aes(x = trial, y = value, colour = s1)) +
  geom_line() +
  facet_grid(cols = vars(group), rows = vars(s2)) +
  labs(title = "Associative Strengths",
       colour = "Cue")

# calculate and plot Alphas

alphas_res <- 
  results(simple_design_results)[["as"]] %>% 
    filter(s1 %in% c("A")) %>% 
  group_by(trial, s1, group) %>% 
  summarise(value = mean(value))

alphas_res %>%
  ggplot(aes(x = trial, y = value, colour = s1)) +
  geom_line() +
  facet_grid(cols = vars(group)) +
  labs(title = "Alphas")

```

## Le Pelley, Beesley, & Griffiths (2011)

### Design

|    Phase 1    |  Phase 2  |
|:-------------:|:---------:|
|   (10 each)   | (10 each) |
| AV-O1 ; AW-O1 |   AX-O3   |
| BV-O2 ; BW-O2 |   BY-O4   |
| CX-O2 ; CY-O2 |   CV-O3   |
| DX-O1 ; DY-O1 |   DW-O4   |

```{r}
LBG_2011 <- data.frame(
  Group = c("LBG_2011"),
  Phase1 = c("10AV(O1)/10AW(O1)/10BV(O2)/10BW(O2)/10CX(O2)/10CY(O2)/10DX(O1)/10DY(O1)"),
  R1 = c(TRUE),
  Phase2 = c("10AX(O3)/10BY(O4)/10CV(O3)/10DW(O4)"),
  R2 = c(TRUE),
  Test = c("1#A/1#B/1#C/1#D/1#V/1#W/1#X/1#Y"),
  R3 = c(TRUE)
)
# parsing the design and showing the original and what was detected
parsed <- parse_design(LBG_2011)

pars_MAC1975 <- get_parameters(LBG_2011, model = "MAC1975")

# set to original model with no WCA
pars_MAC1975$gammas[c("A","B","C","D","V","W","X","Y")] <- 0
pars_MAC1975$gammas[c("O1","O2","O3","O4")] <- 1

```

### Run simulation

```{r}
LBG_2011_results <- run_experiment(
  LBG_2011, # note we do not need to pass the parsed design
  model = "MAC1975",
  parameters = pars_MAC1975,
  iterations = 10
)
```

### Plot the results

```{r}
# calculate and plot Vs

vs_res <- 
  results(LBG_2011_results)[["vs"]] %>% 
  mutate(cue_type = case_when(s1 %in% c("A", "B", "C", "D") ~ "P",
                              s1 %in% c("V", "W","X", "Y") ~ "NP")) %>% 
  drop_na() %>% 
  filter(s2 %in% c("O1", "O2", "O3", "O4")) %>% 
  group_by(trial, cue_type, s2) %>% 
  summarise(value = mean(value))

vs_res %>%
  ggplot(aes(x = trial, y = value, colour = cue_type)) +
  geom_line() +
  facet_grid(rows = vars(s2)) +
  labs(title = "Associative Strengths",
       colour = "Cue")

# calculate and plot Alphas

alphas_res <- 
  results(LBG_2011_results)[["as"]] %>% 
  mutate(cue_type = case_when(s1 %in% c("A", "B", "C", "D") ~ "P",
                              s1 %in% c("V", "W","X", "Y") ~ "NP")) %>% 
  drop_na() %>% 
  group_by(trial, cue_type) %>% 
  summarise(value = mean(value))

alphas_res %>%
  ggplot(aes(x = trial, y = value, colour = cue_type)) +
  geom_line() +
  labs(title = "Alphas")

```

The simulation results (Vs) show the Learned Predictiveness effect, with stronger learning about P cues compared to NP cues in Stage 2. The alpha results show a maintenance of the high associability for P cues in Stage 2. The initial blip in Stage 2 is probably due to all cues having V = 0 with respect to new outcomes. So NP cues are initially an equally valid predictor and gain some associability...I'm not sure why associability declines for P cues, but their high associability means learning is more rapid and they quickly become the best available predictor.

## Does uncertainty increase associability for NP cues? (Stockport)

### Design:

|  Phase 1  |        Phase 2        |
|:---------:|:---------------------:|
| (10 each) |                       |
|   AV-O1   | 5x AV-O1 ; 5 x AV(O2) |
|   AW-O1   |      10x AW(O1)       |
|   BV-O2   | 5x BV-O2 ; 5 x BV(O1) |
|   BW-O2   |      10x BW(O2)       |

```{r}
STK <- data.frame(
  Group = c("LBG_2011"),
  Phase1 = c("10AV(O1)/10AW(O1)/10BV(O2)/10BW(O2)"),
  R1 = c(TRUE),
  Phase2 = c("5AV(O1)/5AV(O2)/10AW(O1)/5BV(O2)/5BV(O1)/10BW(O2)"),
  R2 = c(TRUE),
  Test = c("1#A/1#B/1#V/1#W"),
  R3 = c(TRUE)
)
# parsing the design and showing the original and what was detected
parsed <- parse_design(STK)

pars_MAC1975 <- get_parameters(STK, model = "MAC1975")

# set to original model with no WCA
pars_MAC1975$gammas[c("A","B","V","W")] <- 0
pars_MAC1975$gammas[c("O1","O2")] <- 1

```

### Run simulation

```{r}
STK <- run_experiment(
  STK, # note we do not need to pass the parsed design
  model = "MAC1975",
  parameters = pars_MAC1975,
  iterations = 50
)
```

### Plot the results

```{r}
# calculate and plot Vs

vs_res <-
  results(STK)[["vs"]] %>%
  filter(s1 %in% c("A", "B", "V", "W"),
         s2 %in% c("O1", "O2")) %>%
  group_by(trial, s1, s2) %>%
  summarise(value = mean(value))

vs_res %>%
  ggplot(aes(x = trial, y = value, colour = s1)) +
  geom_line() +
  facet_grid(rows = vars(s2)) +
  labs(title = "Associative Strengths",
       colour = "Cue")

# calculate and plot Alphas

alphas_res <-
  results(STK)[["as"]] %>%
  filter(s1 %in% c("A", "B", "V", "W")) %>% 
  group_by(trial, s1) %>%
  summarise(value = mean(value))

alphas_res %>%
  ggplot(aes(x = trial, y = value, colour = s1)) +
  geom_line() +
  labs(title = "Alphas")

```

Interestingly, the Mackintosh model does predict that associability for the NP cue X will rise over the course of Stage 2. This is because on AX-O2 and BX-O1 trials, X is a better predictor of the alternative outcome than A and B, for which V = 0 (initially).

## Does pretraining A and B weaken this effect (of X > Y)? 

### Design:

|  Phase 1  |        Phase 2        |
|:---------:|:---------------------:|
| (10 each) |                       |
|   AV-O1   | 5x AV-O1 ; 5 x AV(O2) |
|   AW-O1   |      10x AW(O1)       |
|   BV-O2   | 5x BV-O2 ; 5 x BV(O1) |
|   BW-O2   |      10x BW(O2)       |

```{r}
STK_pre <- data.frame(
  Group = c("pretrain", "no_pretrain"),
  Phase1 = c("10A(O1)/10B(O2)", "10C(O1)/10D(O2)"),
  R1 = c(TRUE, TRUE),
  Phase2 = c("10AV(O1)/10AW(O1)/10BV(O2)/10BW(O2)", 
             "10AV(O1)/10AW(O1)/10BV(O2)/10BW(O2)"),
  R2 = c(TRUE),
  Phase3 = c("5AV(O1)/5AV(O2)/10AW(O1)/5BV(O2)/5BV(O1)/10BW(O2)",
             "5AV(O1)/5AV(O2)/10AW(O1)/5BV(O2)/5BV(O1)/10BW(O2)"),
  R3 = c(TRUE),
  Test = c("1#A/1#B/1#V/1#W", "1#A/1#B/1#V/1#W"),
  R4 = c(TRUE)
)
# parsing the design and showing the original and what was detected
parsed <- parse_design(STK_pre)

pars_MAC1975 <- get_parameters(STK_pre, model = "MAC1975")

# set to original model with no WCA
pars_MAC1975$gammas[c("A","B","C", "D", "V","W")] <- 0
pars_MAC1975$gammas[c("O1","O2")] <- 1

```

### Run simulation

```{r}
STK_pre <- run_experiment(
  STK_pre, # note we do not need to pass the parsed design
  model = "MAC1975",
  parameters = pars_MAC1975,
  iterations = 50
)
```

### Plot the results

```{r}
# calculate and plot Vs

vs_res <-
  results(STK_pre)[["vs"]] %>%
  filter(s1 %in% c("A", "B", "C", "D", "V", "W"),
         s2 %in% c("O1", "O2")) %>%
  group_by(group, trial, s1, s2) %>%
  summarise(value = mean(value))

vs_res %>%
  ggplot(aes(x = trial, y = value, colour = s1)) +
  geom_line() +
  facet_grid(rows = vars(group), cols = vars(s2)) +
  labs(title = "Associative Strengths",
       colour = "Cue")

# calculate and plot Alphas

alphas_res <-
  results(STK_pre)[["as"]] %>%
  filter(s1 %in% c("A", "B", "C", "D", "V", "W")) %>% 
  group_by(group, trial, s1) %>%
  summarise(value = mean(value))

alphas_res %>%
  ggplot(aes(x = trial, y = value, colour = s1)) +
  geom_line() +
  facet_grid(rows = vars(group)) +
  labs(title = "Alphas")

```
